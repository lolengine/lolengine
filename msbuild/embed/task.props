<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
     - LolEmbedTask task
     -
     - For each input item, create a C++ file declaring a byte array initialised to the
     - item contents, and add the C++ file to the list of compilation sources.
     -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-->

  <!-- Use ItemDefinitionGroup to add default metadata to all LolEmbed items. -->
  <ItemDefinitionGroup>
    <LolEmbed>
      <CppFileName>$(IntDir)embedded\%(FileName)%(Extension).g.cpp</CppFileName>
      <ObjFileName>$(IntDir)embedded\%(FileName)%(Extension).g$(ObjectExt)</ObjFileName>
      <UpToDateCheckInput>True</UpToDateCheckInput>
      <ExecutionDescription>%(FileName)%(Extension) -> %(FileName)%(Extension).g.cpp [embedded]</ExecutionDescription>
    </LolEmbed>
  </ItemDefinitionGroup>

  <UsingTask TaskName="LolEmbedTask" TaskFactory="CodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <Inputs ParameterType="Microsoft.Build.Framework.ITaskItem" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.IO.Compression" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
          var filename = Inputs.GetMetadata("Filename") + Inputs.GetMetadata("Extension");
          var cppfilename = Inputs.GetMetadata("CppFilename");
          var src = Inputs.GetMetadata("RelativeDir").Replace("\\", "/") + filename;
          var cppname = "lol_resource_" + Regex.Replace(src, "[^A-Za-z0-9_]", "_");
          var flags = (Inputs.GetMetadata("Compression") == "gzip" ? 0x0002 : 0x0000);
          var path = Inputs.GetMetadata("ResourcePath");
          path = string.IsNullOrEmpty(path) ? src : path;

          // List all metadata for debugging purposes
          var metadata = "";
          foreach (var m in Inputs.MetadataNames.Cast<string>())
              metadata += "// [" + m + "]: " + Inputs.GetMetadata(m) + "\r\n";

          // Read input file and format it as hex bytes with cheap wrapping
          var bytes = File.ReadAllBytes(Inputs.ItemSpec);
          var data = "0x" + BitConverter.ToString(bytes).Replace("-", ", 0x");
          data = Regex.Replace(data, "(.{95}) ", "$1\r\n    ");

          var cpp = @"//
// WARNING! This file was autogenerated. DO NOT MODIFY IT!
// See $(MSBuildThisFileFullpath) for more information.
//
{metadata}//

#include <cstdint> // for uint8_t
#include <cstddef> // for size_t

extern ""C"" {

uint8_t {cppname}[] {
    {data}
};

size_t {cppname}_size = sizeof({cppname});
char const * {cppname}_path = ""{path}"";
uint32_t {cppname}_flags = {flags};

} // extern ""C""
";
          // This is C# 4.0 so no string interpolationâ€¦
          cpp = cpp.Replace("{cppname}", cppname)
                   .Replace("{metadata}", metadata)
                   .Replace("{path}", path)
                   .Replace("{flags}", flags.ToString())
                   .Replace("{data}", data);

          Directory.CreateDirectory(Path.GetDirectoryName(cppfilename));
          File.WriteAllText(cppfilename, cpp);
          Inputs.SetMetadata("ExecutionDescription", filename + " [embedded]");
      ]]></Code>
    </Task>
  </UsingTask>


  <!--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
     - LolEmbedRegistryTask task
     -
     - Create a C++ file referencing the list of generated LolEmbed items, with a
     - special unused symbol that will force the linker to reference embedded items
     - by just referencing it. This is necessary when compiling to a static library
     - because if a symbol is not directly referenced, it will never be linked into
     - the final binary.
     -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-->

  <UsingTask TaskName="LolEmbedRegistryTask" TaskFactory="CodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <RegistryFile ParameterType="Microsoft.Build.Framework.ITaskItem" Required="true" />
      <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs"><![CDATA[
          var cpp = "#define LOL_EMBED_REGISTRY_IMPL\r\n"
                  + "#include \"lol/engine/private/sys/registry.ipp\"\r\n";
          foreach (var item in Items)
          {
              var filename = item.GetMetadata("Filename") + item.GetMetadata("Extension");
              var src = item.GetMetadata("RelativeDir").Replace("\\", "/") + filename;
              var cppname = "lol_resource_" + Regex.Replace(src, "[^A-Za-z0-9_]", "_");
              cpp += "LOL_EMBED_REGISTER(" + cppname + ");\r\n";
          }

          Directory.CreateDirectory(Path.GetDirectoryName(RegistryFile.ItemSpec));
          File.WriteAllText(RegistryFile.ItemSpec, cpp);
      ]]></Code>
    </Task>
  </UsingTask>

</Project>
