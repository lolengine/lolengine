<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <LinkIncremental Condition="'$(Configuration)'=='Debug'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)'=='Release'">false</LinkIncremental>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Use MakeRelative() so that <ObjectFileName> can use %(RelativeDir) -->
    <BinDir>$([MSBuild]::MakeRelative("$(ProjectDir)","$(SolutionDir)"))binaries\</BinDir>
    <OutDir>$(BinDir)$(Platform.ToLower())-$(PlatformToolset.ToLower())-$(Configuration.ToLower())\</OutDir>
    <IntDir>$(OutDir)obj\$(ProjectName)\</IntDir>
    <ObjectExt Condition="'$(ObjectExt)'==''">.obj</ObjectExt>
  </PropertyGroup>

  <!-- The linker flag to export a symbol and force it to be pulled from a static
     - library even if it is not referenced in the code.
   -->
  <PropertyGroup>
    <ExportSymbolLinkerFlag Condition="'$(ExportSymbolLinkerFlag)'==''">/EXPORT:</ExportSymbolLinkerFlag>
  </PropertyGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <!-- Protect against source files in different directories having the same name.
         - FIXME: we would like to use $(IntDir)%(RelativeDir) here but this is subject
         - to directory escaping if ClCompile items are outside the project directory,
         - e.g. with Kinc, or even LolEmbed items. -->
      <ObjectFileName>$(IntDir)%(Directory)</ObjectFileName>
    </ClCompile>
  </ItemDefinitionGroup>

  <ItemDefinitionGroup>
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>

      <!-- Use latest version of the C++ draft -->
      <LanguageStandard>stdcpplatest</LanguageStandard>

      <!-- Always multiprocessor, never minimal rebuild -->
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <MinimalRebuild>false</MinimalRebuild>

      <AdditionalIncludeDirectories>
          $(LolEngineDir)\lol\include;
          $(LolEngineDir)\src\include;
          $(KincIncludes);
          $(PegtlIncludes);
          $(ImguiIncludes);
          $(BtPhysIncludes);
          $(GlIncludes);
          %(AdditionalIncludeDirectories)
      </AdditionalIncludeDirectories>

      <AdditionalIncludeDirectories Condition="'$(Platform)'=='Win32' Or '$(Platform)'=='x64'">
          $(SdlIncludes);
          $(CppHttpIncludes);
          $(FfmpegIncludes);
          $(AssimpIncludes);
          $(XinputIncludes);
          %(AdditionalIncludeDirectories)
      </AdditionalIncludeDirectories>

      <AdditionalPreprocessorDefinitions>
          $(KincDefines);
          _CRT_SECURE_NO_WARNINGS;
          B3_USE_CLEW;
          LUA_ANSI;
      </AdditionalPreprocessorDefinitions>

      <PreprocessorDefinitions>%(AdditionalPreprocessorDefinitions);%(PreprocessorDefinitions)</PreprocessorDefinitions>

      <!-- Trim trailing backslashes and escape them for C++ -->
      <PreprocessorDefinitions>LOL_CONFIG_PROJECTDIR="$(ProjectDir.Trim('\').Replace('\','/'))";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions>LOL_CONFIG_SOLUTIONDIR="$(SolutionDir.Trim('\').Replace('\','/'))";%(PreprocessorDefinitions)</PreprocessorDefinitions>

      <PreprocessorDefinitions Condition="'$(Platform)'=='Win32'">WIN32;$(Win32Defines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Platform)'=='x64'">WIN32;$(Win32Defines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Platform)'=='Orbis'">$(OrbisDefines);%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Condition="'$(Configuration)'=='Debug'">
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary Condition="'$(Platform)'=='Win32' Or '$(Platform)'=='x64'">MultiThreadedDebugDLL</RuntimeLibrary>
      <PreprocessorDefinitions>_DEBUG;LOL_BUILD_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <ClCompile Condition="'$(Configuration)'=='Release'">
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <!-- For Microsoft tools -->
      <Optimization>MaxSpeed</Optimization>

      <RuntimeLibrary Condition="'$(Platform)'=='Win32' Or '$(Platform)'=='x64'">MultiThreadedDLL</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
      <PreprocessorDefinitions>NDEBUG;LOL_BUILD_RELEASE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>

    <Link Condition="'$(Platform)'=='Win32' Or '$(Platform)'=='x64'">
      <!-- FIXME: not for the static library! -->
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;$(SdlDeps);$(KincDeps);$(FfmpegDeps);$(AssimpDeps);$(LibGccDeps);$(GdiDeps);$(XinputDeps);$(GlDeps);$(CppHttpDeps);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(LibGccLibs);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories>$(SdlLibs);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories>$(CppHttpLibs);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories>$(FfmpegLibs);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories>$(AssimpLibs);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories>$(GlLibs);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalLibraryDirectories>$(XinputLibs);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <SubSystem Condition="'$(enable_sdl)'!='no'">Windows</SubSystem>
      <SubSystem Condition="'$(enable_sdl)'=='no'">Console</SubSystem>
    </Link>
    <Link Condition="'$(Platform)'=='Orbis'">
      <AdditionalLibraryDirectories>$(OrbisLibs);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(OrbisDeps);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <Link Condition="'$(Configuration)'=='Debug'">
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
    <Link Condition="'$(Configuration)'=='Release'">
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
    <Link>
      <AdditionalDependencies>%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>

    <!-- Post-build hook to run commands -->
    <PostBuildEvent Condition="'$(Platform)'=='Win32' Or '$(Platform)'=='x64'">
      <Command Condition="'$(enable_sdl)'!='no'">
        rem do nothing
      </Command>
    </PostBuildEvent>

  </ItemDefinitionGroup>
</Project>
