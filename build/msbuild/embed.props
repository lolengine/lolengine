<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup Condition="'$(LolEmbedBeforeTargets)'=='' and '$(LolEmbedAfterTargets)'==''">
    <LolEmbedBeforeTargets>Midl</LolEmbedBeforeTargets>
    <LolEmbedAfterTargets>CustomBuild</LolEmbedAfterTargets>
  </PropertyGroup>
  <PropertyGroup>
    <LolEmbedDependsOn>_SelectedFiles;$(LolEmbedDependsOn)</LolEmbedDependsOn>
    <PowerShellExe Condition="'$(PowerShellExe)'==''">%WINDIR%\System32\WindowsPowerShell\v1.0\powershell.exe</PowerShellExe>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <LolEmbed>
      <!-- Technique for embedding powershell found at https://gist.github.com/fearthecowboy/9e06ad9d92c5d939582147a35c049693 -->
      <CommandLineTemplate><![CDATA[
# 2>nul || type %~df0 | $(PowerShellExe) -noninteractive -& exit %errorlevel% || #

$in = "%(RelativeDir)%(Filename)%(Extension)".replace('\', '/')
$out = "$(IntDir)%(Filename)%(Extension).cpp"
$name = "lol_resource_$in" -replace ('[^A-Za-z0-9_]', '_')
$data = (format-hex "%(Fullpath)" | foreach-object { "0x" + ($_ -split " {2,}")[1].replace(" ", ", 0x") }) -join ",`n    "

$code = @"
// WARNING! This file was autogenerated. DO NOT MODIFY IT!
// See $(MSBuildThisFileFullpath) for more information.
`
#include <cstdint> // for uint8_t
#include <cstddef> // for size_t
`
extern "C" {
`
uint8_t $name[] {
    $data
};
`
size_t ${name}_size = sizeof($name);
char const * ${name}_path = "$in";
`
} // extern "C"
"@
[System.IO.File]::WriteAllText($out, $code, [System.Text.Encoding]::UTF8)
        ]]></CommandLineTemplate>
      <Outputs>$(IntDir)%(FileName)%(Extension).cpp</Outputs>
      <ExecutionDescription>%(FileName)%(Extension)</ExecutionDescription>
    </LolEmbed>
  </ItemDefinitionGroup>
</Project>
